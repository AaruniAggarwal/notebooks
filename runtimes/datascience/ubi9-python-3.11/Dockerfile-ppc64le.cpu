###############################################################
# Stage 1 Base builder image with common tooling
###############################################################

FROM registry.access.redhat.com/ubi9/python-311:latest AS builder
USER root

ENV OPENBLAS_VERSION=0.3.30
ENV ONNX_VERSION=1.18.0
ENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig/
ENV PATH="$HOME/.cargo/bin:$PATH"

# Install dependencies
RUN dnf install -y gcc-toolset-13 make wget unzip && \
    dnf clean all && \
    pip install --upgrade pip setuptools wheel

# Create a dummy file to trigger build dependency
RUN touch /tmp/control

###############################################################
# Stage 2 to build OpenBLAS
###############################################################

FROM builder AS openblas-builder
USER root
WORKDIR /root

# Download and build OpenBLAS
RUN source /opt/rh/gcc-toolset-13/enable && \
    wget https://github.com/OpenMathLib/OpenBLAS/releases/download/v${OPENBLAS_VERSION}/OpenBLAS-${OPENBLAS_VERSION}.zip && \
    unzip OpenBLAS-${OPENBLAS_VERSION}.zip && cd OpenBLAS-${OPENBLAS_VERSION}                                            && \
    make -j$(nproc) TARGET=POWER9 BINARY=64 USE_OPENMP=1 USE_THREAD=1 NUM_THREADS=120 DYNAMIC_ARCH=1 INTERFACE64=0

###############################################################
# Stage 3 to build onnx
###############################################################

FROM builder AS onnx-builder
USER root
WORKDIR /root

RUN dnf install -y cmake ninja-build && \
    dnf clean all && rm -rf /var/cache/yum

RUN source /opt/rh/gcc-toolset-13/enable && \
    git clone --recursive https://github.com/onnx/onnx.git && \
    cd onnx && git checkout v${ONNX_VERSION} && \
    git submodule update --init --recursive && \
    pip install -r requirements.txt && \
    export CMAKE_ARGS="-DPython3_EXECUTABLE=$(which python3.11)" && \
    pip wheel . -w /onnx_wheels

###############################################################
# Stage 4 to build Final runtime Image
###############################################################

FROM registry.access.redhat.com/ubi9/python-311:latest AS base
WORKDIR /opt/app-root/bin
USER root

ENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig/
ENV OPENBLAS_VERSION=0.3.30
ENV PATH="$HOME/.cargo/bin:$PATH"

# Install dependencies
RUN dnf install -y mesa-libGL skopeo gcc-toolset-13 unixODBC-devel cmake && \
    dnf clean all && rm -rf /var/cache/yum

# Copy built OpenBLAS sources
COPY --from=openblas-builder /root/OpenBLAS-${OPENBLAS_VERSION} /openblas

# Dummy file to trigger build dependency
COPY --from=onnx-builder /tmp/control /dev/null

# Install onnx wheels & OpenBLAS
RUN --mount=type=bind,from=onnx-builder,source=/onnx_wheels/,target=/onnx_wheels/,ro \
    HOME=/root pip install /onnx_wheels/*.whl && \
    PREFIX=/usr/local make -C /openblas install && rm -rf /openblas

# Other apps and tools installed as default user
USER 1001

# Install micropipenv to deploy packages from Pipfile.lock
RUN pip install --no-cache-dir -U "micropipenv[toml]"

# Install the oc client
RUN curl -L https://mirror.openshift.com/pub/openshift-v4/$(uname -m)/clients/ocp/stable/openshift-client-linux.tar.gz \
        -o /tmp/openshift-client-linux.tar.gz && \
    tar -xzvf /tmp/openshift-client-linux.tar.gz oc && \
    rm -f /tmp/openshift-client-linux.tar.gz

##########################################
# Stage 5: Final runtime-datascience image
##########################################
FROM base AS runtime-datascience  

ARG DATASCIENCE_SOURCE_CODE=runtimes/datascience/ubi9-python-3.11
ARG GRPC_PYTHON_BUILD_SYSTEM_OPENSSL=1

LABEL name="odh-notebook-runtime-datascience-ubi9-python-3.11" \
    summary="Runtime data science notebook image for ODH notebooks" \
    description="Runtime data science notebook image with base Python 3.11 builder image based on UBI9 for ODH notebooks" \
    io.k8s.display-name="Runtime data science notebook image for ODH notebooks" \
    io.k8s.description="Runtime data science notebook image with base Python 3.11 builder image based on UBI9 for ODH notebooks" \
    authoritative-source-url="https://github.com/opendatahub-io/notebooks" \
    io.openshift.build.commit.ref="main" \
    io.openshift.build.source-location="https://github.com/opendatahub-io/notebooks/tree/main/runtimes/datascience/ubi9-python-3.11" \
    io.openshift.build.image="quay.io/opendatahub/workbench-images:runtime-datascience-ubi9-python-3.11"

WORKDIR /opt/app-root/bin
USER root 

# Install Python packages from Pipfile.lock
COPY ${DATASCIENCE_SOURCE_CODE}/Pipfile.lock ./
# Copy Elyra dependencies for air-gapped enviroment
COPY ${DATASCIENCE_SOURCE_CODE}/utils ./utils/

RUN echo "Installing softwares and packages" && \
    source /opt/rh/gcc-toolset-13/enable && \
    micropipenv install && \
    rm -f ./Pipfile.lock && \
    # Fix permissions to support pip in Openshift environments \
    chmod -R g+w /opt/app-root/lib/python3.11/site-packages && \
    fix-permissions /opt/app-root -P

USER 1001
WORKDIR /opt/app-root/src


